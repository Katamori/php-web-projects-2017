to-do:

- high priority:
    - ensure proper security...
        - utilize some session handling (for security)
    - huge overhaul for the YT crawler
    - add new tables to x_doom db: authors, speedrunners, trusted uploaders(?)
    - store Reddit auth-token in session
        - something similar for MAL login, too
    - MAL: somehow managing $url_user only to be queried once
        - store in a session and check if the corresponding val is empty

- medium priority:
    - extend MAL watchlist viewer with proper features
    - update cronjob (not visible on GitHub due to plaintext password contained)
        - multi-thread cronjob
    - hide login inputs when AJAX request is sent
    - send authentication only if it hasn't happened so far    
        - also hide login inputs if you're already logged in
    - Reddit statistics database (for reader amounts at least)
    - SCP database(?) 
    - db_doom: dictionary for allowed and forbidden parameters

- low priority:
    - some CSS design for some proper look
    - start differentiating beta/unstable vs public/master 
        - different branch in Git?
    - document and template "keys.php"
    - lock /hostinger scripts on other sites completely
        - or make it more flexible? enormous, yes potentially worthy job...
    - add async loading: counter, "please wait" text, etc






- done:
    - fix MAL script on server
    - put EVERY CUSTOM SESSION VAR into a specified array


-------------------------------------------------------------


Project ideas:

Zoltán Schmidt, [23.03.17 01:21]
dee az is megteszi hogy lekapom mindenféle hírportálról a híreket, timestamppel, 
és napra, sőt órára lebontva szöveg szerinti elemzést baszatok rá

Zoltán Schmidt, [23.03.17 01:22]
annyit csak hogy milyen szavak kerülnek elő, vágod

-------------------------------------------------------------

Supplementary code:

    php:

        1) secure SQL query, source: http://stackoverflow.com/a/60496/2320153

        $stmt = $dbConnection->prepare('SELECT * FROM employees WHERE name = ?');
        $stmt->bind_param('s', $name);

        $stmt->execute();

        $result = $stmt->get_result();
        while ($row = $result->fetch_assoc()) {
            // do something with $row
        }    




    MySQL:

        1) update on join

        UPDATE  t1
        LEFT JOIN
                t2
        ON      t2.id = t1.id
        SET     t1.col1 = newvalue
        WHERE   t2.id IS NULL



        2) similar for SELECT

        SELECT  t1.*
        FROM    t1
        WHERE   t1.id NOT IN
                (
                SELECT  id
                FROM    t2
                )        