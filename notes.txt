to-do:

- high priority:
    - ensure proper security...
        - use cookies to store encrypted pw (crypt key on db maybe)
        - use MD5
        - prevent outer access of certain files
        - manual SQL writer with preventing injection
    - huge overhaul for the YT crawler
    - add new tables to x_doom db: authors, speedrunners, trusted uploaders(?)
    - provide relog attempts 
    - make logout possible
    - MAL: use variable variables for WatchListItem, for simpler declaration
    - add titles for HTML files

- medium priority:
    - extend MAL watchlist viewer with proper features
    - update cronjob (not visible on GitHub due to plaintext password contained)
        - multi-thread cronjob
    - send authentication only if it hasn't happened so far    
        - also hide login inputs if you're already logged in
    - Reddit statistics database (for reader amounts at least)
    - SCP database(?) 
    - db_doom: dictionary for allowed and forbidden parameters
    - Reddit: /r/RoastMe viewer: picture, and comments besides
    - Reddit: something with /r/worldbuilding
    - imgur mosaic experiment with API
    - Reddit: usable search interface
    - Stack Exchange site expansion monitor
    - MAL: regular search that can somehow redirect to anime_browser
        - involved generalizing anime_browser "input" to a general list
    - add scale to anime_browser
        - needs some CSS work I guess
    - Code Golf SE: gather EVERY code and comments
    - MAL: add my login for safe operations
    - MAL: save anime titles to the database, just for fun
    - custom manga reader

- low priority:
    - some CSS design for some proper look
    - start differentiating beta/unstable vs public/master 
        - different branch in Git?
    - document and template "keys.php"
    - lock /hostinger scripts on other sites completely
        - or make it more flexible? enormous, yes potentially worthy job...
    - add async loading: counter, "please wait" text, etc
    - try some oop maybe






- done:
    - fix MAL script on server
        - context: it was broken...
    - put EVERY CUSTOM SESSION VAR into a specified array
        - store Reddit auth-token in session
            - something similar for MAL login, too
    - MAL: somehow managing $url_user only to be queried once
        - store in a session and check if the corresponding val is empty
    - if logged in, still be able to choose landing site
    - db_doom: hide login inputs when AJAX request is sent
    - MAL: implement watchlist ordering, once and for all

-------------------------------------------------------------

Supplementary code:

    php:

        1) secure SQL query, source: http://stackoverflow.com/a/60496/2320153

        $stmt = $dbConnection->prepare('SELECT * FROM employees WHERE name = ?');
        $stmt->bind_param('s', $name);

        $stmt->execute();

        $result = $stmt->get_result();
        while ($row = $result->fetch_assoc()) {
            // do something with $row
        }    




    MySQL:

        1) update on join

        UPDATE  t1
        LEFT JOIN
                t2
        ON      t2.id = t1.id
        SET     t1.col1 = newvalue
        WHERE   t2.id IS NULL



        2) similar for SELECT

        SELECT  t1.*
        FROM    t1
        WHERE   t1.id NOT IN
                (
                SELECT  id
                FROM    t2
                )    


    misc/random:

       MAL auth link: 'https://myanimelist.net/api/account/verify_credentials.xml';
       MAL search example: 'https://myanimelist.net/api/anime/search.xml?q=Kemonozume';    